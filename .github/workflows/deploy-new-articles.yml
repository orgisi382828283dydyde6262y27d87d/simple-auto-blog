# This is a basic workflow to help you get started with Actions


name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "docs" ]
  pull_request:
    branches: [ "docs" ]
  schedule:
    - cron: '*/15 * * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Download and install php
        run: |
          sudo apt-get install php7.4
          sudo apt-get install -y php7.4-iconv

      - name: Download and install NPM
        run: sudo apt-get install npm
        
      - name: Install sass
        run: npm install -g sass
        
      - name: Compile SCSS
        run: | 
          cd assets/css
          sass main.scss main.css && echo "Sass compiled Success" || echo "Some error occured"
          cd ../..
        
      # Runs a set of commands using the runners shell
      - name: Process Source rss feed
        run: |
          ls posts
          cd update-action/
          echo "${{ secrets.RSS2APIKEY }}">api.key
          echo "${{ secrets.BACKUPAPIKEY }}">api2.key
          echo "${{ secrets.QUEUEURL }}">api3.key
          mkdir posts
          php update.php
          mv {robots.txt,index.html,sitemap.xml} ../
          #rm -rf ../posts/*
          mv posts/* ../posts/
          ls ../posts/
          rm ap*.key
          cd ..
          
      - name: Push to the repo
        run: |
          git config --global user.name "AutoUpdater"
          git config --global user.email "bot@autoupdater.eu.org"
          git add .
          git commit -m "Updated Repo Posts"
          git push
